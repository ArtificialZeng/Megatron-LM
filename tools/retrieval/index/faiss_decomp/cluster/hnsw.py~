# lawrence mcafee

# ~~~~~~~~ import ~~~~~~~~
import faiss
import os

from lutil import pax

from lawrence.index import Index
import lawrence.utils as utils

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# class HNSWStage(Index):
class HNSWIndex(Index):

    def __init__(self, args, d, m):
        super().__init__(args, d)

        self.m = m
        self.hnsw = faiss.IndexHNSWFlat(d, m)

    def dout(self):
        return self.din()

    def verbose(self, v):
        self.c_verbose(self.hnsw, v)

    def train(self, input_data_path, dir_path, timer):

        empty_index_path = self.get_empty_index_path(dir_path)
        output_data_path = self.get_output_data_path(dir_path)

        # pax({
        #     "empty_index_path" : empty_index_path,
        #     "input_data_path" : input_data_path,
        #     "output_data_path" : output_data_path,
        # })

        if not os.path.isfile(empty_index_path):

            timer.push("train")
            centroids = utils.load_data(input_data_path)["centroids"]
            # pax({"*hnsw": self, "centroids": centroids})
            self.hnsw.train(centroids)
            faiss.write_index(self.hnsw, empty_index_path)
            timer.pop()

        # if not os.path.isfile(output_data_path):
        #     ...

        return None

# eof
